/*
 * BugHunter Saga API
 * API (Contrato Primero) para la plataforma gamificada BugHunter Saga. Diseñada para soportar la implementación del frontend en Next.js y el backend en Spring Boot para el proyecto de tesis de Max Carrión.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorDTO;
import org.openapitools.client.model.LeaderboardDTO;
import org.openapitools.client.model.ShopItemDTO;
import org.openapitools.client.model.UserStatsDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GamificationApi
 */
@Disabled
public class GamificationApiTest {

    private final GamificationApi api = new GamificationApi();

    /**
     * Obtener la tabla de clasificación
     *
     * Devuelve la tabla de clasificación de la liga actual del usuario para &#x60;pages/leaderboard.tsx&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaderboardGetTest() throws ApiException {
        LeaderboardDTO response = api.leaderboardGet();
        // TODO: test validations
    }

    /**
     * Obtener los artículos de la tienda
     *
     * Devuelve los artículos disponibles en &#x60;pages/shop.tsx&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shopItemsGetTest() throws ApiException {
        List<ShopItemDTO> response = api.shopItemsGet();
        // TODO: test validations
    }

    /**
     * Comprar un artículo de la tienda
     *
     * Permite al usuario comprar un artículo (ej. &#39;streak-freeze&#39;) usando &#39;lingots&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shopPurchaseItemIdPostTest() throws ApiException {
        String itemId = null;
        UserStatsDTO response = api.shopPurchaseItemIdPost(itemId);
        // TODO: test validations
    }

}
