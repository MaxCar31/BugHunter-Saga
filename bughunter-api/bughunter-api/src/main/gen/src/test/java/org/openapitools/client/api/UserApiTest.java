/*
 * BugHunter Saga API
 * API (Contrato Primero) para la plataforma gamificada BugHunter Saga. Diseñada para soportar la implementación del frontend en Next.js y el backend en Spring Boot para el proyecto de tesis de Max Carrión.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorDTO;
import org.openapitools.client.model.UserAccountUpdateDTO;
import org.openapitools.client.model.UserInfoDTO;
import org.openapitools.client.model.UserProfileDTO;
import org.openapitools.client.model.UserSettingsUpdateDTO;
import org.openapitools.client.model.UserStatsDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Actualizar datos de la cuenta (nombre/username)
     *
     * Usado por &#x60;pages/settings/account.tsx&#x60; para guardar cambios.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersMeAccountPutTest() throws ApiException {
        UserAccountUpdateDTO userAccountUpdateDTO = null;
        UserInfoDTO response = api.usersMeAccountPut(userAccountUpdateDTO);
        // TODO: test validations
    }

    /**
     * Obtener el perfil completo del usuario
     *
     * Devuelve toda la información del usuario autenticado, incluyendo datos personales y configuraciones.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersMeProfileGetTest() throws ApiException {
        UserProfileDTO response = api.usersMeProfileGet();
        // TODO: test validations
    }

    /**
     * Actualizar configuraciones del usuario (meta, sonido)
     *
     * Usado por &#x60;pages/settings/coach.tsx&#x60; y &#x60;pages/settings/sound.tsx&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersMeSettingsPutTest() throws ApiException {
        UserSettingsUpdateDTO userSettingsUpdateDTO = null;
        UserProfileDTO response = api.usersMeSettingsPut(userSettingsUpdateDTO);
        // TODO: test validations
    }

    /**
     * Obtener estadísticas de gamificación del usuario
     *
     * Endpoint optimizado para &#x60;RightBar.tsx&#x60; y &#x60;TopBar.tsx&#x60;, proporciona todos los datos dinámicos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersMeStatsGetTest() throws ApiException {
        UserStatsDTO response = api.usersMeStatsGet();
        // TODO: test validations
    }

}
