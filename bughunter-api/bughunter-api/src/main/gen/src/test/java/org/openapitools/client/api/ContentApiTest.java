/*
 * BugHunter Saga API
 * API (Contrato Primero) para la plataforma gamificada BugHunter Saga. Diseñada para soportar la implementación del frontend en Next.js y el backend en Spring Boot para el proyecto de tesis de Max Carrión.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorDTO;
import org.openapitools.client.model.ModuleSummaryDTO;
import org.openapitools.client.model.ProblemDTO;
import org.openapitools.client.model.UnitDetailDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentApi
 */
@Disabled
public class ContentApiTest {

    private final ContentApi api = new ContentApi();

    /**
     * Obtener todos los módulos
     *
     * Devuelve la lista de todos los módulos disponibles para que el usuario elija en &#x60;pages/register.tsx&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentModulesGetTest() throws ApiException {
        List<ModuleSummaryDTO> response = api.contentModulesGet();
        // TODO: test validations
    }

    /**
     * Obtener todos los problemas/preguntas de un módulo
     *
     * Reemplaza la carga de archivos estáticos en &#x60;stores/createQuestionsSlice.ts&#x60;. Devuelve *toda* la lista de problemas (incluyendo &#39;INFO&#39;, &#39;MULTIPLE_CHOICE&#39;, etc.) para un módulo, que &#x60;pages/lesson.tsx&#x60; consumirá.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentModulesModuleCodeProblemsGetTest() throws ApiException {
        String moduleCode = null;
        List<ProblemDTO> response = api.contentModulesModuleCodeProblemsGet(moduleCode);
        // TODO: test validations
    }

    /**
     * Obtener la unidad activa para un módulo
     *
     * Devuelve la estructura de la unidad actual para un módulo (basado en &#x60;utils/units.ts&#x60;, que muestra una unidad por módulo). Incluye la lista de &#39;tiles&#39; (lecciones) para renderizar en &#x60;pages/learn.tsx&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentModulesModuleCodeUnitGetTest() throws ApiException {
        String moduleCode = null;
        UnitDetailDTO response = api.contentModulesModuleCodeUnitGet(moduleCode);
        // TODO: test validations
    }

}
